using System;
using System.Collections;
using System.Collections.Generic;
using DebuggingMod;
using HarmonyLib;
using Il2CppMonomiPark.SlimeRancher.UI.Localization;
using MelonLoader;

namespace PAM.Patches;

[HarmonyPatch(typeof(LocalizationDirector), nameof(LocalizationDirector.LoadTables))]
public static class PatchLocalizationDirectorLoadTable
{
    public static List<Tuple<string, string, string>> translations = new List<Tuple<string, string, string>>();
    private static IEnumerator LoadTable(LocalizationDirector director)
    {
            
        WaitForSecondsRealtime waitForSecondsRealtime = new WaitForSecondsRealtime(0.1f);
        yield return waitForSecondsRealtime;
        foreach (var translation in translations)
        {
            translation.Item1.LogMultiple(translation.Item2, translation.Item3);
            director.Tables[translation.Item1].AddEntry(translation.Item2, translation.Item3);
        }



    }
    public static void Postfix(LocalizationDirector __instance)
    {
        MelonCoroutines.Start(LoadTable(__instance));
    }
}